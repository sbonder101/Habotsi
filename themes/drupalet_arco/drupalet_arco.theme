<?php

use Drupal\Core\Template\Attribute;
use Drupal\block\Entity\Block;
use Drupal\Core\Url;

$theme_path = \Drupal::service('extension.list.theme')->getPath('drupalet_arco');


function drupalet_arco_preprocess_page(&$variables) {
  global $base_url;

  $current_theme = \Drupal::config('system.theme')->get('default');
  $sub_theme = '';
  $theme_handler = \Drupal::service('theme_handler');
  if($theme_handler->themeExists($current_theme)){
    $theme_handler = $theme_handler->getTheme($current_theme);
    $theme_info = $theme_handler->info;
    if(isset($theme_info['base theme']) && !empty($theme_info['base theme']) && strpos($theme_info['base theme'], 'drupalet_')){
      $sub_theme = $current_theme;
    }
  }

  $theme_path = \Drupal::service('extension.list.theme')->getPath('drupalet_arco');
  
  //header settings
  $variables['header_sticky'] = theme_get_setting('header_sticky');
  $variables['header_menu_align'] = theme_get_setting('header_menu_align');
  $variables['default_header_dark_black'] = theme_get_setting('default_header_dark_black');
  $variables['default_header_absolute'] = theme_get_setting('default_header_absolute');
  
  
  
  $variables['theme_path'] = $theme_path;
  
  //Footer columns size
  $variables['footer_first_size'] = theme_get_setting('footer_first_size');
  $variables['footer_second_size'] = theme_get_setting('footer_second_size');
  $variables['footer_third_size'] = theme_get_setting('footer_third_size');
  $variables['footer_four_size'] = theme_get_setting('footer_four_size');
  
  $variables['rtl_layout'] = theme_get_setting('rtl_layout');
	//$variables['sticky_header'] = theme_get_setting('sticky_header');

  //Header setting -----------
  $header = 'header';
  if(theme_get_setting('default_header')){
    $header = theme_get_setting('default_header');
  }

  

  
  $header_skin = '';
  if($sub_theme){
    $theme_path_sub = drupal_get_path('theme', $sub_theme);
    if(file_exists($theme_path_sub . '/templates/header_styles/' . trim($header) . '.html.twig')){
      $header_skin  = $theme_path_sub . '/templates/header_styles/' . trim($header) . '.html.twig';
    }elseif(file_exists($theme_path . '/templates/header_styles/' . trim($header) . '.html.twig')){
      $header_skin  = $theme_path . '/templates/header_styles/' . trim($header) . '.html.twig';
    }
  }else{
    if(file_exists($theme_path . '/templates/header_styles/' . trim($header) . '.html.twig')){
      $header_skin  = $theme_path . '/templates/header_styles/' . trim($header) . '.html.twig';
    }
  }
  
  if(empty($header_skin)) $header_skin = $theme_path . '/templates/header_styles/header.html.twig';//default header

  $variables['theme_path'] = $theme_path;
  $variables['header_skin'] = $header_skin;
 
}

function drupalet_arco_preprocess_image(&$variables) {
  if (isset($variables['attributes']['width']) && isset($variables['attributes']['height'])) {
    unset($variables['attributes']['width']);
    unset($variables['attributes']['height']);
  }
}

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function drupalet_arco_preprocess_html(&$variables) {
  global $theme, $base_url;
  global $parent_root;

  $theme_path = \Drupal::service('extension.list.theme')->getPath('drupalet_arco');

  if(theme_get_setting('enable_panel') == '1' ){
    $current_url = $_SERVER["HTTP_HOST"] . $_SERVER["REQUEST_URI"];
    $current_url = preg_replace('/([?&])gvas=[^&]+(&|$)/','$2',$current_url);
    if(strpos($current_url, '?')){
       $current_url .= '&';
    }
    else{ 
       $current_url .= '?';
    }
    $variables['current_url'] = $current_url;
  }
  $tmp_logo = theme_get_setting('logo');
  $variables['site_logo'] = $tmp_logo['url'];
  $variables['theme_path'] = $theme_path;
	
	//customize css
  if(theme_get_setting('customize_css') ){
    $custom_style  = preg_replace( '!/\*[^*]*\*+([^/][^*]*\*+)*/!', '', theme_get_setting('customize_css') );
    $custom_style = str_replace( array( "\r\n", "\r", "\n", "\t", '  ', '   ', '    ' ), '', $custom_style );
    $variables['customize_css'] =  $custom_style;
  }

  //--- Customize drupalet theme---
  $customize_styles = '';
  $variables['customize_styles'] = $customize_styles;
  
  $variables['theme_skin'] = theme_get_setting('theme_skin');
 
  $variables['enable_customize'] = theme_get_setting('enable_customize'); //display control skin on front end
	
  //Form customize 
  $user = \Drupal::currentUser();

  /*if(theme_get_setting('enable_customize') == 1 &&  \Drupal::moduleHandler()->moduleExists('drupaletthemer') && ($user->hasPermission('administer drupalet_customize') || $user->hasPermission('administer drupalet_customize preview')) ){
    
	
    $variables['current_url'] = $current_url;
  }*/
  
  //---- End customize themer ---

  $layout_rtl_ltr = 'ltr';
  $layout_rtl_ltr = theme_get_setting('rtl_layout');
  if(isset($_GET['drp_layout']) && $_GET['drp_layout']){
    $layout_rtl_ltr = $_GET['drp_layout'];
  }
  
  if(empty($layout_rtl_ltr)){
    $layout_rtl_ltr = 'ltr';
  }
  
  $variables['#attached']['library'][] = 'drupalet_arco/drupalet_arco.layout_rtl_ltr.' . $layout_rtl_ltr;

//Skin
  $theme_skin = 'default';
  $theme_skin = theme_get_setting('theme_skin');
  if(isset($_GET['drp_skin']) && $_GET['drp_skin']){
    $theme_skin = $_GET['drp_skin'];
  }
  
  if(empty($theme_skin)){
    $theme_skin = 'default';
  }
  
  $variables['#attached']['library'][] = 'drupalet_arco/drupalet_arco.theme_skin.' . $theme_skin;

  

  // Add info sidebars to class body html.
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'layout-two-sidebars';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $variables['attributes']['class'][] = 'layout-one-sidebar';
    $variables['attributes']['class'][] = 'layout-sidebar-first';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'layout-one-sidebar';
    $variables['attributes']['class'][] = 'layout-sidebar-second';
  }
  else {
    $variables['attributes']['class'][] = 'layout-no-sidebars';
  }
  

 // $variables['attributes']['class'][] = theme_get_setting('site_layout');
  //$variables['attributes']['class'][] = theme_get_setting('footer_skin');

  /*if(theme_get_setting('preloader') == '1'){
    $variables['preloader'] = 1;
  }else{
    $variables['preloader'] = 0;
  }*/
}

//Google API settings
function drupalet_arco_library_info_build() {
  $api_key = theme_get_setting('google_key');
  if(empty($api_key)) $api_key = 'AIzaSyD8Z6d4uj_qcuUVpk8l294MZzTNeNVX2pM';
  $libraries = [];
  $theme_path = drupal_get_path('theme', 'drupalet_arco');
  $libraries['drupalet_arco.gmap_api'] = [
    'version' => '1.x',
    'js' => [
        'https://maps.googleapis.com/maps/api/js?key='.$api_key.'&libraries=places' => [
            'type' => 'external',
        ],
        'vendor/gmap3.js' => [],
        'vendor/jquery.ui.map.min.js' => [],
    ],
  ];
  return $libraries;
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function drupalet_arco_preprocess_block(&$variables) {
  // Add a clearfix class to system branding blocks
  $variables['test_v'] = '';
  
  if ($variables['plugin_id'] == 'system_branding_block') {
    $variables['attributes']['class'][] = 'clearfix';
    $tmp_logo = theme_get_setting('logo');
    $variables['setting_logo'] = $tmp_logo['use_default'];
  }
  
  if (isset($variables['elements']['#id']) && !empty($variables['elements']['#id'])) {
        $block_id = $variables['elements']['#id'];
        $block = \Drupal\block\Entity\Block::load($block_id);
        if ($block->getRegion()) {
            $region = $block->getRegion();
            $variables['region'] = $region;
        }
        //config as context module
    } else {
        $variables['region'] = $variables['elements']['#configuration']['region'];
    }
	 $variables['base_path'] = base_path();
	
} 

/**
 * Implements hook_preprocess_HOOK() for maintenance-page.html.twig.
 */
function drupalet_arco_preprocess_maintenance_page(&$variables) {
  if (!$variables['db_is_active']) {
    $variables['site_name'] = '';
  }
}



function drupalet_arco_preprocess_block__system_breadcrumb_block(&$variables){
  $styles = array();
  /*$bg_image = base_path() . drupal_get_path('theme', 'drupalet_arco') . '/images/breadcrumb.jpg';
  $bg_color = '#000000';
  $bg_position = 'center center';
  $bg_repeat = 'no-repeat';
  $text_style = 'text-light';
  
  if (!empty($variables['elements']['#id'])) {
    $block = Block::load($variables['elements']['#id']);
    if($variables['plugin_id'] == 'system_breadcrumb_block'){
      $_id = $variables['elements']['#id'];
      $breadcrumb_background_color = $block->getThirdPartySetting('drupaletthemer', 'breadcrumb_background_color');
      $breadcrumb_background_position = $block->getThirdPartySetting('drupaletthemer', 'breadcrumb_background_position');
      $breadcrumb_background_repeat = $block->getThirdPartySetting('drupaletthemer', 'breadcrumb_background_repeat');
      $breadcrumb_color_style = $block->getThirdPartySetting('drupaletthemer', 'breadcrumb_color_style');
      $breadcrumb_background_image_path = \Drupal::config('drupaletthemer.settings')->get('breadcrumb_background_image_path_' . $_id);
      if($breadcrumb_color_style){
        $text_style = $breadcrumb_color_style;
      }
      if($breadcrumb_background_color){
        $bg_color = $breadcrumb_background_color;
      }
      if($breadcrumb_background_position){
        $bg_position = $breadcrumb_background_position;
      }
      if($breadcrumb_background_repeat){
        $bg_repeat = $breadcrumb_background_repeat;
      }
      if($breadcrumb_background_image_path){
        $bg_image = file_create_url($breadcrumb_background_image_path);
      }
    }
  }

  $variables['attributes']['class'][] = $text_style;
  $styles[] = "background-color: {$bg_color};";
  if($bg_image){
    $styles[] = "background-image: url('{$bg_image}');";
  }
  $styles[] = "background-position: {$bg_position};";
  $styles[] = "background-repeat: {$bg_repeat};";
  $variables['custom_style'] = implode('', $styles);
*/
  //Breadcrumb title
  $title = '';
  $request = \Drupal::request();
  $title = '';
  if ($route = $request->attributes->get(\Symfony\Cmf\Component\Routing\RouteObjectInterface::ROUTE_OBJECT)) {
    $title = \Drupal::service('title_resolver')->getTitle($request, $route);
  } 
   $variables['breadcrumb_title'] = $title;
}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function drupalet_arco_preprocess_page_title(&$variables) {
  // Since the title and the shortcut link are both block level elements,
  // positioning them next to each other is much simpler with a wrapper div.
  if (!empty($variables['title_suffix']['add_or_remove_shortcut']) && $variables['title']) {
    // Add a wrapper div using the title_prefix and title_suffix render
    // elements.
    $variables['title_prefix']['shortcut_wrapper'] = array(
      '#markup' => '<div class="shortcut-wrapper clearfix">',
      '#weight' => 100,
    );
    $variables['title_suffix']['shortcut_wrapper'] = array(
      '#markup' => '</div>',
      '#weight' => -99,
    );
    // Make sure the shortcut link is the first item in title_suffix.
    $variables['title_suffix']['add_or_remove_shortcut']['#weight'] = -100;
  }
}

/**
 * Implements hook_form_alter() to add classes to the search form.
 */
function drupalet_arco_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ['search_block_form', 'search_form'])) {
    $key = ($form_id == 'search_block_form') ? 'actions' : 'basic';
    if (!isset($form[$key]['submit']['#attributes'])) {
      $form[$key]['submit']['#attributes'] = new Attribute();
    }
    $form[$key]['submit']['#attributes']->addClass('search-form__submit');
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function drupalet_arco_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if ($variables['element']['#form_id'] == 'search_block_form') {
    $suggestions[] = 'form__search_block_form';
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function drupalet_arco_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if ($variables['is_front']){
    $suggestions[] = 'block__content_home_page';
  }
  
}



function drupalet_arco_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::request()->attributes->get('node')) {
    if(is_object($node)){
      if($node->hasField('node_layout')){
        $layout = $node->get('node_layout')->value;
        if($layout){
          array_splice($suggestions, 1, 0, 'page__layout__' . $layout);
        }else{
          array_splice($suggestions, 1, 0, 'page__node__' . $node->getType());
        } 
      }else{
        array_splice($suggestions, 1, 0, 'page__node__' . $node->getType());
      }
    }else{
      array_splice($suggestions, 1, 0, 'page__layout__container_no_sidebar');
    }
  }
  
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
        $suggestions[] = 'page__node__' . $node->getType();
    }
	if ($node = \Drupal::routeMatch()->getParameter('node')) {
		$content_type = $node->bundle();
		$suggestions[] = 'page__'.$content_type;
	  }

    if (\Drupal::routeMatch()->getRouteName() == 'blog') {
        $suggestions[] = 'page__blog';
    }
    if (\Drupal::routeMatch()->getRouteName() == 'portfolio') {
        $suggestions[] = 'page__page_portfolio';
    }
}


function drupalet_arco_preprocess_views_view(&$variables){
  global $drp_node_index;
  $drp_node_index = 0;
  $view = $variables['view'];
  $variables['attributes']['class'][]="drp-view";
  if(is_numeric(strpos($view->current_display, 'page'))){
    $variables['attributes']['class'][] = "view-page";
  }
}

function drupalet_arco_theme_suggestions_field_alter(&$suggestions, $variables) {
  $suggestions[] = 'field__' . 
  $variables['element']['#field_name'] . '__' . 
  $variables['element']['#view_mode'];
}


function drupalet_arco_page_attachments_alter(array &$attachments) {
  $style = '';
  if(theme_get_setting('logo_width')&& !empty(theme_get_setting('logo_width'))){
    $style .= '.logo-header .logo-header-inner img{max-width:'.theme_get_setting('logo_width').'!important;}';
    //$style .= 'header.header-default .header-main-inner .header-inner{padding-left:'.theme_get_setting('logo_width').'!important;}';
    //$style .= ' header.header-default .header-main-inner .branding{width:'.theme_get_setting('logo_width').'!important;}';
  }
  if(theme_get_setting('logo_width')&& !empty(theme_get_setting('logo_width'))){
    $style .= '.logo-header .logo-header-inner img{max-height:'.theme_get_setting('logo_height').'!important;}';
  }
   if(theme_get_setting('logo_margin')&& !empty(theme_get_setting('logo_margin'))){
    $style .= '.logo-header .logo-header-inner img{margin:'.theme_get_setting('logo_margin').'!important;}';
  }
  
  
  $attachments['#attached']['html_head'][] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'style',
      '#value' => $style,
    ],
    'style-logo',
  ];
}

function drupalet_arco_form_comment_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    $form['author']['#prefix'] = '<div class="row"><div class="col-sm-6 div-form-comment">';
    $form['author']['#suffix'] = '</div>';

    $form['author']['name']['#attributes']['placeholder'] = t( 'Name' );
	//$form['author']['field_email[0][value]']['#attributes']['placeholder'] = t( 'Subject' );
    
	$form['subject']['#prefix'] = '<div class="col-sm-6 div-form-comment">';
	$form['subject']['#suffix'] = '</div></div>';
	$form['subject']['name']['#attributes']['placeholder'] = t( 'Subject' );
	
    unset($form['actions']['preview']);
	$form['actions']['submit']['#attributes'] = array('class' => array('butn butn-bg btn-submit-comment'));
    $form['actions']['submit']['#attributes']['value'] = t('Submit Comment');
	
}
function drupalet_arco_form_contact_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

    $form['actions']['submit']['#attributes']['class'] = array('class' => array('form-submitoneabc'));
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add views unformatted template suggestions.
 * 
 * @inheritdoc
 */
function drupalet_arco_theme_suggestions_views_view_unformatted_alter(array &$suggestions, array $variables) {
  return [
    'views_view_unformatted__' . $variables['view']->id()
  ];
}

function drupalet_arco_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {

  /**
   * Venues Grid Twig Template Suggestions
   */
  // Firstly check it's a view
  if($hook === 'views_view') {

    if($variables['view']->id() === 'home_page_campaings') {
      $suggestions[] = 'views-view--home-page-campaings-view';
    }

    if($variables['view']->id() === 'home_page_campaings') {
      $suggestions[] = 'views-view--home-page-campaings-view';
    }

    if($variables['view']->id() === 'home_slider') {
      // if ($variables['view']->current_display = '')
      $suggestions[] = 'views-view--home-slider';
      $suggestions[] = 'views-view--home-slider--' . $variables['view']->current_display;
    }

    if($variables['view']->id() === 'archive_slider') {
      // if ($variables['view']->current_display = '')
      $suggestions[] = 'views-view--archive-slider';
    }

    if($variables['view']->id() === 'taxonomy') {
      $suggestions[] = 'views-view--taxonomy';
    }

    // var_dump($variables['view']->id());
    
  }

  // Firstly check it's a view field
  if($hook === 'views_view_field') {
    // Check if it's the 'venue' view
    if($variables['view']->id() === 'home_page_campaings') {
      $suggestions[] = 'views-view--home-page-campaings-field';
      // Check the display mode
      // var_dump('here');

    }
  }

  if($hook === 'views_view_unformatted') {
    // Check if it's the 'venue' view
    if($variables['view']->id() === 'home_page_campaings') {
      $suggestions[] = 'home-page-campaings-view';
      // Check the display mode
    }
  }

  if($hook === 'views_view_field') {
    // Check if it's the 'venue' view
    if($variables['view']->id() === 'archive_slider') {
      $suggestions[] = 'view-view-field-archive';
      // Check the display mode
    }
  }

  // if($hook === 'block') {
  //   // Check if it's the 'venue' view
   
  //   if($variables['elements']['#id'] === 'homepageintrovideo') {
  //     dump($variables['elements']);
  //     die;
  //     if($hook === 'media'){
  //       $suggestions[] = 'media-home-page-video';
  //     }
  //     // $suggestions[] = 'media-home-page-video';
  //   }
  // }
  /**
   * E/O Venues Grid Twig Template Suggestions
   */
}

// function drupalet_arco_theme_suggestions_media_alter(array &$suggestions, array $variables)
// {
//   // $image = $variables['attributes']['class'][0];
//   dump($variables);
//   die;
//   $suggestions[] = 'image__'.$image;
// }

/**
 * Implements hook_theme_suggestions_HOOK().
 *
 * Add views field template suggestions.
 * 
 * @inheritdoc
 */
function drupalet_arco_theme_suggestions_views_view_field(array $variables) {
  return [
    'views_view_field__' . $variables['field']->field
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function drupalet_arco_preprocess_field(&$variables, $hook) {
  
}
function drupalet_arco_preprocess_file_video(&$variables) {
  // dump($variables);
  $variables['attributes']['autoplay'] = 'true';
}